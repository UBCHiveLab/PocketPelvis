define({ "api": [  {    "type": "get",    "url": "/account",    "title": "Get account information",    "name": "GetAccountInfo",    "version": "3.0.0",    "description": "<p>Request information regarding your account.</p>",    "group": "Account",    "parameter": {      "fields": {        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "200": [          {            "group": "200",            "type": "Object",            "optional": false,            "field": "account",            "description": "<p>User account information.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"storage\": {\n        \"used\": 100,\n        \"limit\": 1073741824,\n        \"dailyStorageDelta\": 0\n    },\n    \"userEmail\": \"test@wikitude.com\",\n    \"publicUserId: \"S1EdU1Y2W\"\n}",          "type": "json"        }      ]    },    "filename": "src/endpoint/AccountEndpoint.ts",    "groupTitle": "Account",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_QUERY_PARAMETER",            "description": "<p>One or more query parameters are invalid, please check list of allowed values</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/heatmap",    "title": "Image Heatmap Extraction",    "name": "HeatmapGeneration",    "version": "3.0.0",    "description": "<p>Generates a greyscale image out of the input image, where areas with recognition and tracking relevance are highlighted in color. This way one can better understand the rating of an image and see which areas have the highest importance for 2D recognition and tracking. Note that only JPG and non-transparent PNG files are accepted and the generated heatmap image is stored on a temporary folder which is deleted after 24 hours. Store the image on your own server in case you plan to use it in your user interface.</p>",    "group": "Heatmap",    "parameter": {      "fields": {        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          },          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Generation",            "optional": false,            "field": "202",            "description": "<p>The task to create the heatmap is scheduled. The response body contains the initial job status. 'location'-header is the url to the GET endpoint that returns current job status information. It is recommended to query this endpoint after 'estimatedLatency' milliseconds, and poll it afterwards every 10 seconds in case job status is still not 'COMPLETED'.</p>"          }        ]      }    },    "examples": [      {        "title": "Body-Request",        "content": "{ \"imageUrl\": \"https://myserver.com/image1.png\" }",        "type": "JavaScript"      },      {        "title": "Body-Response",        "content": "{ \"status\": \"COMPLETED\",\n  \"id\": \"456def\",\n  \"inputParams\": { \"imageUrl\": \"https://myserver.com/image.png\" },\n  \"payload\": { \"url\": \"https://wikitude-tmp-server.com/heamap-image.png\" }\n  \"estimatedLatency\": 5000,\n  \"created\": 1482602400000 }",        "type": "JavaScript"      }    ],    "filename": "src/endpoint/HeatmapEndpoint.ts",    "groupTitle": "Heatmap",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_PROPERTY",            "description": "<p>One or more of the properties you have sent in the body are invalid, or mandatory properties are missing.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/objectTargetCollection",    "title": "Create Object Target Collection",    "name": "CreateObjectTargetCollection",    "version": "3.0.0",    "description": "<p>Create a new Object Target Collection in your account.</p>",    "group": "ObjectTargetCollection",    "parameter": {      "fields": {        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the new Object Target Collection.</p>"          },          {            "group": "JSONParam",            "type": "JSON",            "optional": true,            "field": "metadata",            "description": "<p>Arbitrary JSON data that should be stored together with the Object Target Collection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          },          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "ObjectTargetCollection",            "optional": false,            "field": "200",            "description": "<p>The newly created Object Target Collection</p>"          }        ]      }    },    "filename": "src/endpoint/MapCollectionEndpoint.ts",    "groupTitle": "ObjectTargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_PROPERTY",            "description": "<p>One or more of the properties you have sent in the body are invalid, or mandatory properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "BODY_CONTENT_TOO_LARGE",            "description": "<p>The content you have sent in the body exceeds the maximum allowed amount of 1MB.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/objectTargetCollection/:tcId",    "title": "Delete Object Target Collection",    "name": "DeleteObjectTargetCollection",    "version": "3.0.0",    "description": "<p>Delete a Object Target Collection and all its Object Targets</p>",    "group": "ObjectTargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "204",            "description": "<p>Empty Response Body</p>"          }        ]      }    },    "filename": "src/endpoint/MapCollectionEndpoint.ts",    "groupTitle": "ObjectTargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "OBJECT_TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to an Object Target Collection. The Object Target Collection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/objectTargetCollection/:tcId/generation/wto",    "title": "Generate WTO",    "name": "GenerateWTO",    "version": "3.0.0",    "description": "<p>Generate a Object Target Collection and all its Object Targets as WTO</p>",    "group": "ObjectTargetCollection",    "parameter": {      "fields": {        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ],        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          }        ],        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "sdkVersion",            "description": "<p>Version of the Wikitude SDK to generated the file for. Valid values &quot;7.0&quot;</p>"          },          {            "group": "JSONParam",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>Address to send email notification to after generation finished.</p>"          }        ]      }    },    "success": {      "fields": {        "202": [          {            "group": "202",            "type": "JobStatus",            "optional": false,            "field": "body",            "description": "<p>The Job status</p>"          }        ]      }    },    "filename": "src/endpoint/MapCollectionEndpoint.ts",    "groupTitle": "ObjectTargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "OBJECT_TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to an Object Target Collection. The Object Target Collection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/objectTargetCollection",    "title": "Get all Object Target Collections",    "name": "GetAllObjectTargetCollections",    "version": "3.0.0",    "description": "<p>Request all Object Target Collections in your account.</p>",    "group": "ObjectTargetCollection",    "parameter": {      "fields": {        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ],        "Query Parameters:": [          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "skip",            "defaultValue": "0",            "description": "<p>Set 0 to start with first collection, set e.g. to 2 to skip first 2 collections. Default value: 0</p>"          },          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "limit",            "defaultValue": "1000",            "description": "<p>Use positive value to define the amount of Object Target Collections to return [1, 1000] per page. Default value: 1000</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "ObjectTargetCollection[]",            "optional": false,            "field": "200",            "description": "<p>The Array of Object Target Collections in your account</p>"          }        ]      }    },    "filename": "src/endpoint/MapCollectionEndpoint.ts",    "groupTitle": "ObjectTargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_QUERY_PARAMETER",            "description": "<p>One or more query parameters are invalid, please check list of allowed values</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "FEATURE_NOT_SUPPORTED",            "description": "<p>The requested feature is not supported.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/objectTargetCollection/:tcId/jobs",    "title": "Status - Get Object Target Collection jobs",    "name": "GetJobList",    "version": "3.0.0",    "description": "<p>Retrieves a list of jobs sorted by creation date</p>",    "group": "ObjectTargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "generationId",            "description": "<p>The id that identifies the Object Target creation.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "otcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          }        ],        "Query Parameters:": [          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "skip",            "defaultValue": "0",            "description": "<p>Set 0 to start with first entry, set e.g. to 2 to skip first 2 entries. Default value: 0</p>"          },          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Use positive value to define the amount of entries to return [1, 20] per page. Default value: 10</p>"          },          {            "group": "QueryParam",            "type": "String",            "optional": true,            "field": "source",            "defaultValue": "api",            "description": "<p>filter the jobs by source. Available values ('api', 'studio').</p>"          },          {            "group": "QueryParam",            "type": "string",            "optional": true,            "field": "type",            "description": "<p>filter the jobs by type.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "200": [          {            "group": "200",            "optional": true,            "field": "JobStatus",            "description": "<p>body The list of jobs</p>"          }        ]      }    },    "filename": "src/endpoint/MapCollectionEndpoint.ts",    "groupTitle": "ObjectTargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "GENERATION_NOT_FOUND",            "description": "<p>The server has not found anything matching the Request-URI.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/objectTargetCollection/:tcId",    "title": "Get Object Target Collection",    "name": "GetObjectTargetCollection",    "version": "3.0.0",    "description": "<p>Request a particular Object Target Collection in your account.</p>",    "group": "ObjectTargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "ObjectTargetCollection",            "optional": false,            "field": "200",            "description": "<p>The particular requested Object Target Collection</p>"          }        ]      }    },    "filename": "src/endpoint/MapCollectionEndpoint.ts",    "groupTitle": "ObjectTargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "OBJECT_TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to an Object Target Collection. The Object Target Collection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/objectTargetCollection/:tcId/generation/wto/:generationId",    "title": "Status - Generate WTO",    "name": "GetWTOGenerationInformation",    "version": "3.0.0",    "description": "<p>Retrieves information status about a particular scheduled wto generation.</p>",    "group": "ObjectTargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "generationId",            "description": "<p>The id that identifies the Object Targets creation.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          }        ],        "Query Parameters:": [          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "skip",            "defaultValue": "0",            "description": "<p>Set 0 to start with first entry, set e.g. to 2 to skip first 2 entries. Default value: 0</p>"          },          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "limit",            "defaultValue": "10",            "description": "<p>Use positive value to define the amount of entries to return [1, 20] per page. Default value: 10</p>"          },          {            "group": "QueryParam",            "type": "String",            "optional": true,            "field": "source",            "defaultValue": "api",            "description": "<p>filter the jobs by source. Available values ('api', 'studio').</p>"          },          {            "group": "QueryParam",            "type": "string",            "optional": true,            "field": "type",            "description": "<p>filter the jobs by type.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "200": [          {            "group": "200",            "optional": true,            "field": "JobStatus",            "description": "<p>body The list of jobs</p>"          }        ]      }    },    "filename": "src/endpoint/MapCollectionEndpoint.ts",    "groupTitle": "ObjectTargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "GENERATION_NOT_FOUND",            "description": "<p>The server has not found anything matching the Request-URI.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "put",    "url": "/objectTargetCollection/:tcId",    "title": "Update Object Target Collection",    "name": "UpdateObjectTargetCollection",    "version": "3.0.0",    "description": "<p>Updates an existing Object Target Collection in your account.</p>",    "group": "ObjectTargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          }        ],        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the new Object Target Collection.</p>"          },          {            "group": "JSONParam",            "type": "JSON",            "optional": true,            "field": "metadata",            "description": "<p>Arbitrary JSON data that should be updated in the Object Target Collection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          },          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "ObjectTargetCollection",            "optional": false,            "field": "200",            "description": "<p>The updated Object Target Collection</p>"          }        ]      }    },    "filename": "src/endpoint/MapCollectionEndpoint.ts",    "groupTitle": "ObjectTargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_PROPERTY",            "description": "<p>One or more of the properties you have sent in the body are invalid, or mandatory properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "BODY_CONTENT_TOO_LARGE",            "description": "<p>The content you have sent in the body exceeds the maximum allowed amount of 1MB.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/objectTargetCollection/:tcId/target",    "title": "Create Object Target",    "name": "CreateObjectTarget",    "version": "3.0.0",    "description": "<p>Create a new Object Target in an Object Target Collection in your account.</p>",    "group": "ObjectTarget",    "parameter": {      "fields": {        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ],        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the object target collection.</p>"          }        ],        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "Object",            "optional": false,            "field": "body",            "description": "<p>the Object Target to create</p>"          },          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "body.name",            "description": "<p>The name of the Object Target</p>"          },          {            "group": "JSONParam",            "type": "Object",            "optional": false,            "field": "body.resource",            "description": "<p>The resource to create an Object Target from</p>"          },          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "body.resource.uri",            "description": "<p>The uri to the resource to create an Object Target from</p>"          },          {            "group": "JSONParam",            "type": "Number",            "optional": false,            "field": "body.resource.fov",            "description": "<p>The field of view of the resource should be between 40 and 90</p>"          },          {            "group": "JSONParam",            "type": "JSON",            "optional": true,            "field": "body.metadata",            "description": "<p>Arbitrary JSON data that should be stored together with the Object Target.</p>"          }        ]      }    },    "success": {      "fields": {        "202": [          {            "group": "202",            "type": "JobStatus",            "optional": false,            "field": "body",            "description": "<p>The Job status</p>"          }        ]      }    },    "filename": "src/endpoint/MapEndpoint.ts",    "groupTitle": "ObjectTarget",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "OBJECT_TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to an Object Target Collection. The Object Target Collection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/objectTargetCollection/:tcId/targets",    "title": "Create Object Targets",    "name": "CreateObjectTargets",    "version": "3.0.0",    "description": "<p>Create a set of up to 10 new Object Targets in an Object Target Collection in your account.</p>",    "group": "ObjectTarget",    "parameter": {      "fields": {        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ],        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the object target collection.</p>"          }        ],        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "Object[]",            "optional": false,            "field": "body",            "description": "<p>a list of Object Targets to create</p>"          },          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "body.name",            "description": "<p>The name of the Object Target</p>"          },          {            "group": "JSONParam",            "type": "Object",            "optional": false,            "field": "body.resource",            "description": "<p>The resource to create an Object Target from</p>"          },          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "body.resource.uri",            "description": "<p>The uri to the resource to create an Object Target from</p>"          },          {            "group": "JSONParam",            "type": "Number",            "optional": false,            "field": "body.resource.fov",            "description": "<p>The field of view of the resource should be between 40 and 90</p>"          },          {            "group": "JSONParam",            "type": "JSON",            "optional": true,            "field": "body.metadata",            "description": "<p>Arbitrary JSON data that should be stored together with the Object Target.</p>"          }        ]      }    },    "success": {      "fields": {        "202": [          {            "group": "202",            "type": "JobStatus",            "optional": false,            "field": "body",            "description": "<p>The Job status</p>"          }        ]      }    },    "filename": "src/endpoint/MapEndpoint.ts",    "groupTitle": "ObjectTarget",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "OBJECT_TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to an Object Target Collection. The Object Target Collection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/objectTargetCollection/:tcId/target/:targetId",    "title": "Delete Object Target",    "name": "DeleteObjectTarget",    "version": "3.0.0",    "description": "<p>Delete a particular Object Target from your Object Target Collection.</p>",    "group": "ObjectTarget",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "targetId",            "description": "<p>The id that identifies the Object Target.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "204",            "description": "<p>Empty Response Body</p>"          }        ]      }    },    "filename": "src/endpoint/MapEndpoint.ts",    "groupTitle": "ObjectTarget",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "OBJECT_TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to an Object Target Collection. The Object Target Collection could not be found.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "OBJECT_TARGET_NOT_FOUND",            "description": "<p>The specified ID does not refer to an Object Target. The Object Target could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/objectTargetCollection/:tcId/target",    "title": "Get all Object Targets",    "name": "GetAllObjectTargets",    "version": "3.0.0",    "description": "<p>Request all Object Targets of your account.</p>",    "group": "ObjectTarget",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ],        "Query Parameters:": [          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "skip",            "defaultValue": "0",            "description": "<p>Set 0 to start with first Object Target, set e.g. to 2 to skip first 2 maps. Default value: 0</p>"          },          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "limit",            "defaultValue": "1000",            "description": "<p>Use positive value to define the amount of Object Targets to return [1, 1000] per page. Default value: 1000</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "ObjectTarget[]",            "optional": false,            "field": "200",            "description": "<p>The Array of Object Targets of your Object Target Collection</p>"          }        ]      }    },    "filename": "src/endpoint/MapEndpoint.ts",    "groupTitle": "ObjectTarget",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_QUERY_PARAMETER",            "description": "<p>One or more query parameters are invalid, please check list of allowed values</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/objectTargetCollection/:tcId/objectTarget/:targetId",    "title": "Get Object Target",    "name": "GetObjectTarget",    "version": "3.0.0",    "description": "<p>Request a particular Object Target of an Object Target Collection.</p>",    "group": "ObjectTarget",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "targetId",            "description": "<p>The id that identifies the Object Target.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "ObjectTarget",            "optional": false,            "field": "200",            "description": "<p>The particular requested Object Target</p>"          }        ]      }    },    "filename": "src/endpoint/MapEndpoint.ts",    "groupTitle": "ObjectTarget",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "OBJECT_TARGET_NOT_FOUND",            "description": "<p>The specified ID does not refer to an Object Target. The Object Target could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/objectTargetCollection/:tcId/generation/target/:generationId",    "title": "Status - Object Target Generation Information",    "name": "GetObjectTargetCreationGenerationInformation",    "version": "3.0.0",    "description": "<p>Retrieves information status about a particular scheduled Object Target creation.</p>",    "group": "ObjectTarget",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "generationId",            "description": "<p>The id that identifies the Object Target creation.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the Object Target Collection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "200": [          {            "group": "200",            "type": "JobStatus",            "optional": false,            "field": "body",            "description": "<p>The Job status</p>"          }        ]      }    },    "filename": "src/endpoint/MapEndpoint.ts",    "groupTitle": "ObjectTarget",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "GENERATION_NOT_FOUND",            "description": "<p>The server has not found anything matching the Request-URI.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/projects",    "title": "Get all projects",    "name": "GetAllProjects",    "version": "3.0.0",    "description": "<p>Request all projects in your account.</p>",    "group": "Project",    "parameter": {      "fields": {        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ],        "Query Parameters:": [          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "skip",            "defaultValue": "0",            "description": "<p>Set 0 to start with first entry, set e.g. to 2 to skip first 2 entries. Default value: 0</p>"          },          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "limit",            "defaultValue": "1000",            "description": "<p>Use positive value to define the amount of entries to return [1, 1000] per page. Default value: 1000</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Project[]",            "optional": false,            "field": "200",            "description": "<p>The Array of Projects in your account</p>"          }        ]      }    },    "filename": "src/endpoint/ProjectEndpoint.ts",    "groupTitle": "Project",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_QUERY_PARAMETER",            "description": "<p>One or more query parameters are invalid, please check list of allowed values</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/targetCollection",    "title": "Create Target Collection",    "name": "CreateTargetCollection",    "version": "3.0.0",    "description": "<p>Create a new target collection in your account.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The name of the new TargetCollection.</p>"          },          {            "group": "JSONParam",            "type": "JSON",            "optional": true,            "field": "metadata",            "description": "<p>Arbitrary JSON data that should be stored together with the Target Collection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          },          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "TargetCollection",            "optional": false,            "field": "200",            "description": "<p>The newly created TargetCollection</p>"          }        ]      }    },    "filename": "src/endpoint/TargetCollectionEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_PROPERTY",            "description": "<p>One or more of the properties you have sent in the body are invalid, or mandatory properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "BODY_CONTENT_TOO_LARGE",            "description": "<p>The content you have sent in the body exceeds the maximum allowed amount of 1MB.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/targetCollection/:tcId",    "title": "Delete Target Collection",    "name": "DeleteTargetCollection",    "version": "3.0.0",    "description": "<p>Delete a particular target collection in your account.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection that should be deleted</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "204",            "description": "<p>Empty Response Body</p>"          }        ]      }    },    "filename": "src/endpoint/TargetCollectionEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "deprecated": {      "content": "As of release 4.0.0 this endpoint will return error TARGET_COLLECTION_IS_UP_TO_DATE with status code 412."    },    "type": "post",    "url": "/targetCollection/:tcId/generation/cloudarchive",    "title": "Generate Cloud Archive",    "name": "GenerateCloudArchive",    "version": "3.0.0",    "description": "<p>Generate a Cloud Archive from an existing Target Collection. The call is asynchronous and contains a path in the response header (Location) from which the status of the generation can be requested (see Status - Generate Cloud Archive).</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection that should be generated</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 2.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "202",            "description": "<p>Empty Body</p>"          }        ]      }    },    "filename": "src/endpoint/CloudArchiveEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "412",            "optional": false,            "field": "TARGET_COLLECTION_IS_UP_TO_DATE",            "description": "<p>The TargetCollection does not require a Cloud Archive / WTC generation, as no changes have been made since the last generation.</p>"          },          {            "group": "Errors",            "type": "412",            "optional": false,            "field": "TARGET_COLLECTION_IS_EMPTY",            "description": "<p>Generation cannot start as the corresponding TargetCollection is empty. Please upload at least one target.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/targetCollection/:tcId/generation/wtc",    "title": "Generate WTC",    "name": "GenerateWTC",    "version": "3.0.0",    "description": "<p>Generates a wtc-file out of an existing Target Collection with up to 1000 targets. The call is asynchronous and contains a path in the response header (Location) from which the status of the generation can be requested (see Status - Generate WTC).</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection that should be generated</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          }        ],        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "sdkVersion",            "description": "<p>Version of the Wikitude SDK the generated wtc file will be used for. Valid values &quot;4.1&quot;, &quot;5.0&quot;, &quot;5.1&quot;, &quot;5.2&quot;, &quot;5.3&quot;</p>"          },          {            "group": "JSONParam",            "type": "String",            "optional": true,            "field": "eMail",            "description": "<p>An e-Mail will be sent once wtc file is ready for download.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "202",            "description": "<p>Empty Body</p>"          }        ]      }    },    "filename": "src/endpoint/WtmtEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "412",            "optional": false,            "field": "TARGET_COLLECTION_IS_EMPTY",            "description": "<p>Generation cannot start as the corresponding TargetCollection is empty. Please upload at least one target.</p>"          },          {            "group": "Errors",            "type": "412",            "optional": false,            "field": "TARGET_COLLECTION_TOO_LARGE_FOR_WTC",            "description": "<p>There are more than 1000 targets in the collection.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/targetCollection",    "title": "Get all Target Collections",    "name": "GetAllTargetCollections",    "version": "3.0.0",    "description": "<p>Request all target collections in your account.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ],        "Query Parameters:": [          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "skip",            "description": "<p>Set 0 to start with first target collection, set e.g. to 2 to skip first 2 target collections. Default value: 0</p>"          },          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "limit",            "description": "<p>Use positive value to define the amount of target collections to return [1, 1000] per page. Default value: 1000</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "TargetCollection[]",            "optional": false,            "field": "200",            "description": "<p>The Array of TargetCollections in your account</p>"          }        ]      }    },    "filename": "src/endpoint/TargetCollectionEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_QUERY_PARAMETER",            "description": "<p>One or more query parameters are invalid, please check list of allowed values</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/targetCollection",    "title": "Get all Target Collections",    "name": "GetAllTargetCollections",    "version": "2.0.0",    "description": "<p>Request all target collections in your account.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 2.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ],        "Query Parameters:": [          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "skip",            "description": "<p>Set 0 to start with first target collection, set e.g. to 2 to skip first 2 target collections. Default value: 0</p>"          },          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "limit",            "description": "<p>Use positive value to define the amount of target collections to return [1, 1000] per page. Default value: 1000</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "TargetCollection[]",            "optional": false,            "field": "200",            "description": "<p>The Array of TargetCollections in your account</p>"          }        ]      }    },    "filename": "src/endpoint/TargetCollectionEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_QUERY_PARAMETER",            "description": "<p>One or more query parameters are invalid, please check list of allowed values</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          },          {            "group": "Errors",            "type": "301",            "optional": false,            "field": "TOO_MANY_RESULTS",            "description": "<p>the number of results is too high</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/targetCollection/:tcId/generation/cloudarchive/:generationId",    "title": "Status - Generate Cloud Archive",    "name": "GetGenerationInformation",    "version": "3.0.0",    "description": "<p>Retrieves information status about a particular scheduled cloud archive generation.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "generationId",            "description": "<p>The id that identifies the cloud archive scheduled generation.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection that should be generated.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Generation",            "optional": false,            "field": "200",            "description": "<p>The particular requested generation job details. In case JSON attribute status is 'COMPLETED' the generation finished.</p>"          }        ]      }    },    "filename": "src/endpoint/CloudArchiveEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "GENERATION_NOT_FOUND",            "description": "<p>The server has not found anything matching the Request-URI.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/heatmap/:generationId",    "title": "Status - Heatmap Creation",    "name": "GetHeatmapCreationGenerationInformation",    "version": "3.0.0",    "description": "<p>Retrieves information status about a particular scheduled heatmap creation.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "generationId",            "description": "<p>The id that identifies the target creation.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Generation",            "optional": false,            "field": "200",            "description": "<p>The requested job information, including 'status', 'payload' attribute, 'estimatedEnd', 'estimatedLatency' attributes. The 'payload' contains a url to the generated heatmap or or an 'error'-object</p>"          }        ]      }    },    "filename": "src/endpoint/HeatmapEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "GENERATION_NOT_FOUND",            "description": "<p>The server has not found anything matching the Request-URI.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/targetCollection/:tcId/similarity/:generationId",    "title": "Status - Similarity Check",    "name": "GetSimilarityGenerationInformation",    "version": "3.0.0",    "description": "<p>Retrieves information status of a particular scheduled &quot;Similarity Check&quot;.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "generationId",            "description": "<p>The id that identifies the job. Equals &quot;id&quot; in response body of the &quot;Similarity Check&quot; POST endpoint.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Generation",            "optional": false,            "field": "200",            "description": "<p>The requested job information as JSON with 'id', 'status', 'inputParams', 'created' and 'estimatedLatency' attributes.</p> <p>In case status is 'FAILED' and 'error' attribute is added to provide more details. Once status is 'COMPLETED' a 'payload' attribute holds the list of images where each of them has an additional 'candidates'-attribute in case of success or an 'error'-object in case an unexpected error occurred. A candidate has a 'targetName' and a 'score' value between 0 and 1, where a large score means a high similarity. Every job has an 'input'-attribute holding the JSON-Object used for creation (same information as used in POST-body plus 'tcId').</p> <p>Life cycle of a job: SCHEDULED -&gt; RUNNING -&gt; COMPLETED/FAILED</p>"          }        ]      }    },    "examples": [      {        "title": "Body-Response",        "content": "{ \"status\": \"COMPLETED\",\n  \"id\": \"123abc\",\n  \"inputParams\": {\n      \"images\" : [\n        { \"imageUrl\": \"https://myserver.com/image1.png\", \"maxCandidates\": 1 },\n        { \"imageUrl\": \"https://myserver.com/image2.jpeg\", \"maxCandidates\": 1 }\n      ],\n      \"tcId\" : \"myTcId\"\n  },\n  \"payload\": [\n        { \"imageUrl\": \"https://myserver.com/image1.png\", \"maxCandidates\": 1,\n          \"candidates\": [{\"targetName\": \"target1\", \"score\": 0.5}] },\n        { \"imageUrl\": \"https://myserver.com/image2.jpeg\", \"maxCandidates\": 1,\n          \"candidates\": [{\"targetName\": \"target2\", \"score\": 0.0123}] }\n  ]\n  \"estimatedLatency\": 5000,\n  \"created\": 1482602400000 }",        "type": "JavaScript"      }    ],    "filename": "src/endpoint/SimilarityEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "GENERATION_NOT_FOUND",            "description": "<p>The server has not found anything matching the Request-URI.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/targetCollection/:tcId",    "title": "Get Target Collection",    "name": "GetTargetCollection",    "version": "3.0.0",    "description": "<p>Request a particular target collection in your account.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "TargetCollection",            "optional": false,            "field": "200",            "description": "<p>The particular requested TargetCollection</p>"          }        ]      }    },    "filename": "src/endpoint/TargetCollectionEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/targetCollection/:tcId/generation/targets/:generationId",    "title": "Status - Targets Creation",    "name": "GetTargetsCreationGenerationInformation",    "version": "3.0.0",    "description": "<p>Retrieves information status about a particular scheduled targets creation.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "generationId",            "description": "<p>The id that identifies the target creation.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection the targets should be added to.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Generation",            "optional": false,            "field": "200",            "description": "<p>The requested job information, including 'status', 'payload' attribute, 'estimatedEnd', 'estimatedLatency' attributes. The 'payload' contains a list of 'creation-items'. Every item has an 'input'-attribute that holds the JSON-Object used for creation (equals item at this index in post-body). Once status is 'COMPLETED' every item also contains a 'target'-attribute (same style as in successful single target creation) or an 'error'-object (same as status 400 error JSON response in single target creation)</p>"          }        ]      }    },    "filename": "src/endpoint/TargetEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "GENERATION_NOT_FOUND",            "description": "<p>The server has not found anything matching the Request-URI.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/targetCollection/:tcId/generation/wtc/:generationId",    "title": "Status - Generate WTC",    "name": "GetWTCGenerationInformation",    "version": "3.0.0",    "description": "<p>Retrieves information status about a particular scheduled wtc-file generation. Once the status is completed, the wtc information can be retrieved from the target collection (see Get Target Collection).</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "generationId",            "description": "<p>The id that identifies the scheduled wtc-file generation.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection that should be generated.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Generation",            "optional": false,            "field": "200",            "description": "<p>The particular requested generation status.</p>"          }        ]      }    },    "filename": "src/endpoint/WtmtEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "GENERATION_NOT_FOUND",            "description": "<p>The server has not found anything matching the Request-URI.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/targetCollection/:tcId/similarity",    "title": "Similarity Check",    "name": "Similarity",    "version": "3.0.0",    "description": "<p>Pass up to 10 items pointing to PNG or JPEG images hosted via https in the body.</p> <p>In order to find out whether an image is similar to an existing target in terms of recognition and tracking behaviour a check is performed per passed image item. The targetCollection must be published and have an active Cloud Archive in place. Up to 5 (default: 1) so called &quot;candidates&quot; with a similarity &quot;score&quot; are returned per image. Image must be hosted via https and be of type PNG or JPEG.</p> <p>Use 'maxCandidates' to define the maximum amount of candidates to return for an image. You may also set an 'id' attribute (accepted types: Number or String) to tie the result to the input image.</p> <p>Response header value 'location' directly points to the right 'Status - Similarity Check' endpoint. You may also grab the generation 'id' from the body to manually create the corresponding GET endpoint url.</p> <p>Best practice is to trigger 'Similarity Check', wait for 'estimatedLatency' milliseconds and poll 'Status - Similarity Check' endpoint every 5 seconds until its 'status' is 'COMPLETED'.</p>",    "examples": [      {        "title": "Body-Request",        "content": "{ \"images\":\n   [\n    { \"imageUrl\": \"https://myserver.com/image1.png\", \"maxCandidates\": 1 },\n    { \"imageUrl\": \"https://myserver.com/image2.jpeg\", \"maxCandidates\": 1 }\n   ]\n}",        "type": "JavaScript"      },      {        "title": "Body-Response",        "content": "{ \"status\": \"SCHEDULED\",\n  \"id\": \"123abc\",\n  \"inputParams\": {\n      \"images\" : [\n        { \"imageUrl\": \"https://myserver.com/image1.png\", \"maxCandidates\": 1 },\n        { \"imageUrl\": \"https://myserver.com/image2.jpeg\", \"maxCandidates\": 1 }\n      ],\n      \"tcId\" : \"myTcId\"\n  }\n  \"estimatedLatency\": 5000,\n  \"created\": 1482602400000 }",        "type": "JavaScript"      }    ],    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          }        ],        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "JSONArray",            "optional": false,            "field": "images",            "description": "<p>Up to 10 images hosted via https. Supported file formats: JPEG and non transparent PNG. An item in the array must be a JSON Object and contain an 'imageUrl' attribute. Optional attributes: 'maxCandidates' (in range 1-10) and 'id' (Number or String).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "202",            "description": "<p>Response Code with header value 'location' which points to the 'Status - Similarity Check' endpoint. Body holds async job information. A JSON Object with an 'id' (for 'Status - Similarity Check' GET endpoint), 'inputParams' (JSON Object holding the 'images' as a list and the tcId), 'status' ('SCHEDULED', 'COMPLETED', 'FAILED', 'COMPLETED'), 'estimatedLatency' and 'created' timestamps.</p>"          }        ]      }    },    "filename": "src/endpoint/SimilarityEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_QUERY_PARAMETER",            "description": "<p>One or more query parameters are invalid, please check list of allowed values</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/targetCollection/:tcId",    "title": "Update Target Collection",    "name": "UpdateTargetCollection",    "version": "3.0.0",    "description": "<p>Update a target collection in your account.</p>",    "group": "TargetCollection",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection that should be updated</p>"          }        ],        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>The new name of the TargetCollection.</p>"          },          {            "group": "JSONParam",            "type": "JSON",            "optional": true,            "field": "metadata",            "description": "<p>Arbitrary JSON data that should be stored together with the Target Collection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          },          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "TargetCollection",            "optional": false,            "field": "200",            "description": "<p>The updated TargetCollection</p>"          }        ]      }    },    "filename": "src/endpoint/TargetCollectionEndpoint.ts",    "groupTitle": "TargetCollection",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_PROPERTY",            "description": "<p>One or more of the properties you have sent in the body are invalid, or mandatory properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "BODY_CONTENT_TOO_LARGE",            "description": "<p>The content you have sent in the body exceeds the maximum allowed amount of 1MB.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "deprecated": {      "content": "This endpoint will be no longer supported from January 1st 2017 onwards. Have a look at asynchronous approach introduced in (#Target:CreateTargets)."    },    "type": "post",    "url": "/targetCollection/:tcId/target",    "title": "Create Target",    "name": "CreateTarget",    "version": "3.0.0",    "description": "<p>Create a new Target in a Target Collection in your account.</p>",    "group": "Target",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection the Target will be created in.</p>"          }        ],        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "String",            "optional": false,            "field": "imageUrl",            "description": "<p>A remote URL pointing to the image that should be used as Target. The allowed file size is restricted to 3mb.</p>"          },          {            "group": "JSONParam",            "type": "String",            "optional": true,            "field": "name",            "description": "<p>The name of the new Target. If not set, a random name will be assigned to the Target. Only following characters are allowed: a-z, A-Z, 0-9, _,-,.</p>"          },          {            "group": "JSONParam",            "type": "Number",            "optional": true,            "field": "physicalHeight",            "description": "<p>The physical (real world) height of the target, in millimeters.</p>"          },          {            "group": "JSONParam",            "type": "JSON",            "optional": true,            "field": "metadata",            "description": "<p>Arbitrary JSON data that should be stored together with the Target.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          },          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Target",            "optional": false,            "field": "200",            "description": "<p>The newly created Target</p>"          }        ]      }    },    "filename": "src/endpoint/TargetEndpoint.ts",    "groupTitle": "Target",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_PROPERTY",            "description": "<p>One or more of the properties you have sent in the body are invalid, or mandatory properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_TARGETNAME_CHARACTERS",            "description": "<p>The target name you have sent contains illegal characters. Only the following characters are allowed: a-z, A-Z, 0-9, _, -, . and the space character. At least one character must be different from the space character.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "DUPLICATE_TARGETNAME_USAGE",            "description": "<p>The target name you have sent is already taken by another target in your target collection. Please use a different target name.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "IMAGE_NOT_SUPPORTED",            "description": "<p>You tried to upload an image in a format which is not supported. Supported image formats are PNG and JPEG (.png, .jpg, .jpeg).</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "IMAGE_TOO_LARGE",            "description": "<p>The image you provided exceeds the allowed size.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "BODY_CONTENT_TOO_LARGE",            "description": "<p>The content you have sent in the body exceeds the maximum allowed amount of 1MB.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "DOWNLOAD_FAILED",            "description": "<p>The system could not download the file you have specified as Target. Please check the URL and access rights.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "403",            "optional": false,            "field": "QUOTA_EXCEEDED_TARGETS",            "description": "<p>You have reached your quota limit and are not allowed to upload targets anymore.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/targetCollection/:tcId/targets",    "title": "Create Targets",    "name": "CreateTargets",    "version": "3.0.0",    "description": "<p>Create a set of up to 10 new Targets in a Target Collection in your account.</p>",    "group": "Target",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection the Targets will be created in.</p>"          }        ],        "JSON Array in the request body holding set of Target-Creation information:": [          {            "group": "JSONArrayParamTargets",            "type": "Array",            "optional": false,            "field": "List",            "description": "<p>of JSON Objects as defined in single 'Create Target' endpoint</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          },          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Generation",            "optional": false,            "field": "202",            "description": "<p>The task to create the listed targets is scheduled. The response body contains the initial job status. 'location'-header is the url to the GET endpoint that returns current job status information. It is recommended to query this endpoint after 'estimatedLatency' milliseconds, and poll it afterwards every 10 seconds in case job status is still not 'COMPLETED'. Once job status is 'COMPLETED' each item holds a 'target' attribute of the created target or an 'error' attribute.</p>"          }        ]      }    },    "filename": "src/endpoint/TargetEndpoint.ts",    "groupTitle": "Target",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_PROPERTY",            "description": "<p>One or more of the properties you have sent in the body are invalid, or mandatory properties are missing.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "delete",    "url": "/targetCollection/:tcId/target/:targetId",    "title": "Delete Target",    "name": "DeleteTarget",    "version": "3.0.0",    "description": "<p>Delete a particular Target in your account.</p>",    "group": "Target",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection the Target is stored in.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "targetId",            "description": "<p>The id that identifies the Target that should be deleted</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "204",            "description": "<p>Empty Response Body</p>"          }        ]      }    },    "filename": "src/endpoint/TargetEndpoint.ts",    "groupTitle": "Target",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target. The target could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/targetCollection/:tcId/target/:targetId",    "title": "Get Target",    "name": "GetTarget",    "version": "3.0.0",    "description": "<p>Request a particular Target in a particular Target Collection.</p>",    "group": "Target",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "targetId",            "description": "<p>The id that identifies the Target.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Target",            "optional": false,            "field": "200",            "description": "<p>The particular requested Target</p>"          }        ]      }    },    "filename": "src/endpoint/TargetEndpoint.ts",    "groupTitle": "Target",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target. The target could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/targetCollection/:tcId/target",    "title": "Get Targets",    "name": "GetTargets",    "version": "3.0.0",    "description": "<p>Request targets in a target collection.</p>",    "group": "Target",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ],        "Query Parameters:": [          {            "group": "QueryParam",            "type": "String",            "optional": true,            "field": "sortby",            "description": "<p>Targets may be sorted by 'name', 'creDat', 'modDat', 'rating'. Default value: 'creDat'</p>"          },          {            "group": "QueryParam",            "type": "String",            "optional": true,            "field": "sortorder",            "description": "<p>Targets may be sorted ascending ('asc') or descending ('desc'). Default value: 'desc'</p>"          },          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "skip",            "description": "<p>Set 0 to start with first target, set e.g. to 2 to skip first 2 targets. Default value: 0</p>"          },          {            "group": "QueryParam",            "type": "Number",            "optional": true,            "field": "limit",            "description": "<p>Set to 0 for 'all targets' or use positive value to define max. amount of targets to return. Default value: 0</p>"          },          {            "group": "QueryParam",            "type": "String",            "optional": true,            "field": "s",            "description": "<p>The search string to look for in target names.</p>"          },          {            "group": "QueryParam",            "type": "boolean",            "optional": true,            "field": "addHasAugmentations",            "description": "<p>Add the hasAugmentations property</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Target[]",            "optional": false,            "field": "200",            "description": "<p>The Array of Targets in the Target Collection</p>"          }        ]      }    },    "filename": "src/endpoint/TargetEndpoint.ts",    "groupTitle": "Target",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "INVALID_QUERY_PARAMETER",            "description": "<p>One or more query parameters are invalid, please check list of allowed values</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/targetCollection/:tcId/target/:targetId",    "title": "Update Target",    "name": "UpdateTarget",    "version": "3.0.0",    "description": "<p>Updates properties of a particular Target in your account. Currently following properties are supported: physicalHeight, metadata</p>",    "group": "Target",    "parameter": {      "fields": {        "Path Parameters in the request path:": [          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "tcId",            "description": "<p>The id that identifies the TargetCollection the Target is stored in.</p>"          },          {            "group": "PathParam",            "type": "String",            "optional": false,            "field": "targetId",            "description": "<p>The id that identifies the Target that should be deleted</p>"          }        ],        "JSON Object in the request body:": [          {            "group": "JSONParam",            "type": "Number",            "optional": true,            "field": "physicalHeight",            "description": "<p>The physical (real world) height of the target, in millimeters.</p>"          },          {            "group": "JSONParam",            "type": "JSON",            "optional": true,            "field": "metadata",            "description": "<p>Arbitrary JSON data that should be stored together with the Target.</p>"          }        ],        "Header Parameters in the request:": [          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "Content-Type",            "description": "<p>The Content Type of the body. Must be set to application/json.</p>"          },          {            "group": "HeaderParam",            "type": "Number",            "optional": false,            "field": "X-Version",            "description": "<p>The version of the API to be used. Must be set to 3.</p>"          },          {            "group": "HeaderParam",            "type": "String",            "optional": false,            "field": "X-Token",            "description": "<p>Your Manager Token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Target",            "optional": false,            "field": "200",            "description": "<p>The updated Target</p>"          }        ]      }    },    "filename": "src/endpoint/TargetEndpoint.ts",    "groupTitle": "Target",    "error": {      "fields": {        "Errors": [          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_MISSING",            "description": "<p>One or more mandatory header properties are missing.</p>"          },          {            "group": "Errors",            "type": "400",            "optional": false,            "field": "HEADER_PROPERTY_INVALID",            "description": "<p>One or more header properties are invalid.</p>"          },          {            "group": "Errors",            "type": "401",            "optional": false,            "field": "INVALID_TOKEN",            "description": "<p>The token you have sent is invalid. Please check the X-Token header and place the correct token into the header.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_COLLECTION_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target collection. The TargetCollection could not be found.</p>"          },          {            "group": "Errors",            "type": "404",            "optional": false,            "field": "TARGET_NOT_FOUND",            "description": "<p>The specified ID does not refer to a target. The target could not be found.</p>"          },          {            "group": "Errors",            "type": "500",            "optional": false,            "field": "INTERNAL_SERVER_ERROR",            "description": "<p>The server cannot complete your request due to an internal error. You can try to send your request again in a couple of minutes. If it still does not work, please contact the Wikitude support.</p>"          }        ]      }    }  }] });
